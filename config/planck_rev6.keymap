/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/keys.h>

#include "includes/local.h"
#include "includes/4x12.h"

/* Uncomment this block if using an encoder */
//&encoder {
//    status = "okay";
//};

#define COMBO(NAME, BINDINGS, KEYPOS) \
  combo_##NAME { \
    timeout-ms = <50>; \
    bindings = <BINDINGS>; \
    key-positions = <KEYPOS>; \
    layers = <0>; \
  };

//#define HYPR LS(LC(LA(LGUI)))
#define QUICK_TAP_MS 175
#define IDLE_MS 150
#define TAPPING_TERM_MS 230

/ {
    behaviors {
        hml: homerow_mods_left {
                compatible = "zmk,behavior-hold-tap";
                label = "HOMEROW_MODS_LEFT";
                flavor = "balanced";
                tapping-term-ms = <TAPPING_TERM_MS>;
                quick-tap-ms = <QUICK_TAP_MS>;
                require-prior-idle-ms = <IDLE_MS>;
                bindings = <&kp>, <&kp>;
                #binding-cells = <2>; 
                hold-trigger-key-positions = <KEYS_R THUMBS>;
        };
        hmr: homerow_mods_right {
                compatible = "zmk,behavior-hold-tap";
                label = "HOMEROW_MODS_RIGHT";
                flavor = "balanced";
                tapping-term-ms = <TAPPING_TERM_MS>;
                quick-tap-ms = <QUICK_TAP_MS>;
                require-prior-idle-ms = <IDLE_MS>;
                bindings = <&kp>, <&kp>;
                #binding-cells = <2>; 
                hold-trigger-key-positions = <KEYS_L THUMBS>;
        };
        slt: spacebar_layer_tap { 
                compatible = "zmk,behavior-hold-tap"; 
                label = "SPACE_LAYER_TAP"; 
                #binding-cells = <2>; 
                flavor = "tap-preferred"; 
                tapping-term-ms = <TAPPING_TERM_MS>; 
                quick-tap-ms = <QUICK_TAP_MS>; 
                global-quick-tap; 
                bindings = <&mo>, <&kp>; 
        }; 
        bspc_del: backspace_delete {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp BACKSPACE>, <&kp DELETE>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            keep-mods = <(MOD_RSFT)>;
        };
        colon_semi: invert_colon_semi {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp COLON>, <&kp SEMI>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };
    combos {
        compatible = "zmk,combos";

        COMBO(esckey,      &kp ESC,         19 20)
        COMBO(ctrlshfttab, &kp LC(LS(TAB)), 36 37)
        COMBO(ctrltab,     &kp LC(TAB),     37 38)
        COMBO(caps_word,   &caps_word,      0  13)
    };
    macros {
        DEBUG_PASTE: DEBUG_PASTE {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <MYDEBUG_PASTE_MACRO>;
            label = "DEBUG_PASTE";
        };
 
        DEBUG_PASTE2: DEBUG_PASTE2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = 
              MYDEBUG_PASTE_MACRO_2
            label = "DEBUG_PASTE2";
        };  

        EMAIL: EMAIL {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp C &kp H &kp M &kp O &kp U &kp E &kp L &kp AT &kp C &kp H &kp M &kp O &kp U &kp E &kp L &kp DOT &kp C &kp O &kp M>;
            label = "EMAIL";
        };

        WORK_EMAIL: WORK_EMAIL {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp C &kp B &kp O &kp U &kp D &kp J &kp N &kp A &kp AT &kp R &kp E &kp D &kp H &kp A &kp T &kp DOT &kp C &kp O &kp M>;
            label = "WORK_EMAIL";
        };
    };
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
//    ┌───────────────────┬─────────┬─────────────┬─────────────┬─────────────┬─────┬───────────┬─────────────┬─────────────┬─────────────┬─────────┬────────────────────┐
//    │ mt lsft(lctl) tab │ slt 1 Q │      W      │      E      │      R      │  T  │     Y     │      U      │      I      │      O      │ slt 1 P │     &bspc_del      │
//    ├───────────────────┼─────────┼─────────────┼─────────────┼─────────────┼─────┼───────────┼─────────────┼─────────────┼─────────────┼─────────┼────────────────────┤
//    │     mt lctl `     │    A    │ &hml lgui S │ &hml lalt D │ &hml lsft F │  G  │     H     │ &hmr rsft J │ &hmr lalt K │ &hmr rgui L │    '    │     mt lctl -      │
//    ├───────────────────┼─────────┼─────────────┼─────────────┼─────────────┼─────┼───────────┼─────────────┼─────────────┼─────────────┼─────────┼────────────────────┤
//    │     &sk lsft      │    Z    │      X      │      C      │      V      │  B  │     N     │      M      │      ,      │      .      │    /    │    &colon_semi     │
//    ├───────────────────┼─────────┼─────────────┼─────────────┼─────────────┼─────┼───────────┼─────────────┼─────────────┼─────────────┼─────────┼────────────────────┤
//    │    lgui(bspc)     │  capsw  │    ralt     │    sl 2     │    sl 3     │     │ slt 1 spc │ mt lgui ent │ slt 2 left  │ slt 3 down  │   up    │ mt lsft(lctl) rght │
//    └───────────────────┴─────────┴─────────────┴─────────────┴─────────────┴─────┴───────────┴─────────────┴─────────────┴─────────────┴─────────┴────────────────────┘
  &mt LS(LCTRL) TAB   &slt 1 Q     &kp W         &kp E         &kp R          &kp T    &kp Y          &kp U            &kp I         &kp O         &slt 1 P    &bspc_del
  &mt LCTRL GRAVE     &kp A        &hml LGUI S   &hml LALT D   &hml LSHFT F   &kp G    &kp H          &hmr RSHFT J     &hmr LALT K   &hmr RGUI L   &kp SQT     &mt LCTRL MINUS
  &sk LSHFT           &kp Z        &kp X         &kp C         &kp V          &kp B    &kp N          &kp M            &kp COMMA     &kp DOT       &kp SLASH   &colon_semi
  &kp LG(BSPC)        &caps_word   &kp RALT      &sl 2         &sl 3          &trans   &slt 1 SPACE   &mt LGUI ENTER   &slt 2 LEFT   &slt 3 DOWN   &kp UP      &mt LS(LCTRL) RIGHT
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        lower {
            bindings = <
//    ┌─────────┬────────────────┬─────┬─────┬─────┬─────┬─────┬───┬───┬───┬───┬──────┐
//    │ lsft(`) │       !        │  @  │  {  │  }  │  |  │  =  │ 7 │ 8 │ 9 │ * │  :   │
//    ├─────────┼────────────────┼─────┼─────┼─────┼─────┼─────┼───┼───┼───┼───┼──────┤
//    │   del   │       #        │  $  │  (  │  )  │  +  │  _  │ 4 │ 5 │ 6 │ " │  ;   │
//    ├─────────┼────────────────┼─────┼─────┼─────┼─────┼─────┼───┼───┼───┼───┼──────┤
//    │         │       %        │  ^  │  [  │  ]  │  -  │  &  │ 1 │ 2 │ 3 │ \ │  /   │
//    ├─────────┼────────────────┼─────┼─────┼─────┼─────┼─────┼───┼───┼───┼───┼──────┤
//    │ bl_ on  │ &studio_unlock │     │     │     │     │     │ . │ 0 │ , │ = │ play │
//    └─────────┴────────────────┴─────┴─────┴─────┴─────┴─────┴───┴───┴───┴───┴──────┘
  &kp LS(GRAVE)   &kp EXCL         &kp AT       &kp LBRC   &kp RBRC   &kp PIPE    &kp EQUAL   &kp N7    &kp N8   &kp N9      &kp ASTRK   &kp COLON
  &kp DEL         &kp HASH         &kp DOLLAR   &kp LPAR   &kp RPAR   &kp PLUS    &kp UNDER   &kp N4    &kp N5   &kp N6      &kp DQT     &kp SEMI
  &trans          &kp PRCNT        &kp CARET    &kp LBKT   &kp RBKT   &kp MINUS   &kp AMPS    &kp N1    &kp N2   &kp N3      &kp BSLH    &kp SLASH
  &bl BL_ON       &studio_unlock   &trans       &trans     &trans     &trans      &trans      &kp DOT   &kp N0   &kp COMMA   &kp EQUAL   &kp C_PP
            >;
        };

        raise {
            bindings = <
//    ┌───────────────┬─────────────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬────────┬──────────────┐
//    │    lsft(`)    │      1      │  2  │  3  │  4  │  5  │  6  │  7  │  8  │  9  │   0    │     bspc     │
//    ├───────────────┼─────────────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼────────┼──────────────┤
//    │      del      │     f1      │ f2  │ f3  │ f4  │ f5  │ f6  │ f7  │ f8  │ f9  │  f10   │     f11      │
//    ├───────────────┼─────────────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼────────┼──────────────┤
//    │               │             │     │     │     │     │     │     │     │     │        │     f12      │
//    ├───────────────┼─────────────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼────────┼──────────────┤
//    │ &DEBUG_PASTE2 │ &WORK_EMAIL │     │     │     │     │     │     │     │     │ &EMAIL │ &DEBUG_PASTE │
//    └───────────────┴─────────────┴─────┴─────┴─────┴─────┴─────┴─────┴─────┴─────┴────────┴──────────────┘
  &kp LS(GRAVE)   &kp N1        &kp N2   &kp N3   &kp N4   &kp N5   &kp N6   &kp N7   &kp N8   &kp N9   &kp N0    &kp BSPC
  &kp DEL         &kp F1        &kp F2   &kp F3   &kp F4   &kp F5   &kp F6   &kp F7   &kp F8   &kp F9   &kp F10   &kp F11
  &trans          &trans        &trans   &trans   &trans   &trans   &trans   &trans   &trans   &trans   &trans    &kp F12
  &DEBUG_PASTE2   &WORK_EMAIL   &trans   &trans   &trans   &trans   &trans   &trans   &trans   &trans   &EMAIL    &DEBUG_PASTE
            >;
        };
        other {
            bindings = <
//    ┌─────┬────────────┬────────────┬──────────────────┬──────────────────┬─────────┬─────────┬─────────┬─────────┬─────────┬─────────┬─────┐
//    │     │  lgui(1)   │  lgui(2)   │     lgui(3)      │     lgui(4)      │ lgui(5) │ lgui(6) │ lgui(7) │ lgui(8) │ lgui(9) │ lgui(0) │     │
//    ├─────┼────────────┼────────────┼──────────────────┼──────────────────┼─────────┼─────────┼─────────┼─────────┼─────────┼─────────┼─────┤
//    │     │ lctl(left) │ lctl(rght) │ lctl(lsft(left)) │ lctl(lsft(rght)) │         │  left   │  down   │   up    │  rght   │         │     │
//    ├─────┼────────────┼────────────┼──────────────────┼──────────────────┼─────────┼─────────┼─────────┼─────────┼─────────┼─────────┼─────┤
//    │     │    end     │    home    │ lctl(lsft(end))  │ lctl(lsft(home)) │         │         │         │         │         │         │     │
//    ├─────┼────────────┼────────────┼──────────────────┼──────────────────┼─────────┼─────────┼─────────┼─────────┼─────────┼─────────┼─────┤
//    │     │    pgup    │    pgdn    │    lctl(pgdn)    │    lctl(pgup)    │         │         │         │         │         │         │     │
//    └─────┴────────────┴────────────┴──────────────────┴──────────────────┴─────────┴─────────┴─────────┴─────────┴─────────┴─────────┴─────┘
  &trans   &kp LG(N1)     &kp LG(N2)      &kp LG(N3)         &kp LG(N4)          &kp LG(N5)   &kp LG(N6)   &kp LG(N7)   &kp LG(N8)   &kp LG(N9)   &kp LG(N0)   &trans
  &trans   &kp LC(LEFT)   &kp LC(RIGHT)   &kp LC(LS(LEFT))   &kp LC(LS(RIGHT))   &trans       &kp LEFT     &kp DOWN     &kp UP       &kp RIGHT    &trans       &trans
  &trans   &kp END        &kp HOME        &kp LC(LS(END))    &kp LC(LS(HOME))    &trans       &trans       &trans       &trans       &trans       &trans       &trans
  &trans   &kp PG_UP      &kp PG_DN       &kp LC(PG_DN)      &kp LC(PG_UP)       &trans       &trans       &trans       &trans       &trans       &trans       &trans
            >;
        };

    };
};
